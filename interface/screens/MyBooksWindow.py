
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Frame, Scrollbar, Tk, Canvas, Entry, Text, Button, ttk , PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


class Aplicattion():
    def __init__(self):
        self.mybookswindow = Tk()
        self.interface()
        self.Frame_Table()
        self.MyBooks_list()

    def back_to_home(self):
        from interface.screens.HomeWindow import HomeWindow
        self.mybookswindow.destroy()
        self.novaHome = HomeWindow()
        self.novaHome.generate_home_window()

    def interface(self):
        self.mybookswindow.geometry("1300x700")
        self.mybookswindow.configure(bg = "#2C0A59")
        self.mybookswindow.maxsize(width=1300, height=700)#configura as dmensoes maximas da tela
        self.mybookswindow.minsize(width=400, height=170)

        self.canvas = Canvas(
            self.mybookswindow,
            self.mybookswindow.title("Mybooks"),
            bg = "#2C0A59",
            height = 700,
            width = 1297,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.place(x = 0, y = 0)

        #buttons
        self.button_image_icon = PhotoImage(
            file=relative_to_assets("icon.png"))

        self.button_icon = Button(
            image=self.button_image_icon,
            borderwidth=0,
            highlightthickness=0,
            relief="flat",
            bg="#2C0A59",
            bd=0,
            activebackground="#2C0A60",
            command=self.back_to_home,
            cursor="hand2",
        )

        self.button_icon.place(
            x=1194.0,
            y=19.0,
        )
        self.button_image_search = PhotoImage(
                file=relative_to_assets("button_search.png"))

        self.button_search = Button(
            image=self.button_image_search,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_search clicked"),
            relief="sunken",
            cursor="hand2",
            activebackground="#2C0A59",
            bg="#2C0A59",
            bd=0
        )
        self.button_search.place(
            x=1235.0,
            y=168.0,
            width=40.3193359375,
            height=40.5035400390625
        )

        #images

        self.image_image_MyBooks = PhotoImage(
            file=relative_to_assets("MyBooks.png"))
        image_1 = self.canvas.create_image(
            248.861328125,
            68.0,
            image=self.image_image_MyBooks
        )
        self.image_image_ISBN = PhotoImage(
            file=relative_to_assets("image_ISBN.png"))
        self.image_3 = self.canvas.create_image(
            770.0,
            188.0,
            image=self.image_image_ISBN
            )
        self.image_image_search = PhotoImage(
            file=relative_to_assets("image_search.png"))
        self.image_search = self.canvas.create_image(
            1030.0,
            145.0,
            image=self.image_image_search
        )

        #input
        self.entry_image_search = PhotoImage(
            file=relative_to_assets("entry_search.png"))
        self.entry_bg_1 = self.canvas.create_image(
            1030.5,
            190.5,
            image=self.entry_image_search
        )
        self.entry_search = Entry(
            bd=0,
            bg="#93679A",
            highlightthickness=0,
            justify="center",
            font=('Georgia 14')
        )
        self.entry_search.place(
            x=850.0,
            y=173.5,
            width=365.0,
            height=26.0
        )

        #tabela 
        
    def Frame_Table(self): 
        self.frame_MyBooksTable= Frame(self.mybookswindow,bd=5,bg="#2C0A59",highlightbackground="purple",highlightthickness=3)
        self.frame_MyBooksTable.place(relx=0.05,rely=0.34 ,relwidth=0.90,relheight=0.65)
    def MyBooks_list(self):

        self.Books_list= ttk.Treeview(self.frame_MyBooksTable,height=5,columns=("Title","Type","Author","Publisher","Publication date","Language","Start of Reading","End of Reading","Status"))#"Status"

        self.Books_list.heading("#0",text="ID")
        self.Books_list.heading("#1",text="Title")
        self.Books_list.heading("#2",text="Type")
        self.Books_list.heading("#3",text="Author")
        self.Books_list.heading("#4",text="Publisher")
        self.Books_list.heading("#5",text="Publication date")
        self.Books_list.heading("#6",text="Language")
        self.Books_list.heading("#7",text="Start of Reading")
        self.Books_list.heading("#8",text="End of Reading" )
        self.Books_list.heading("#9",text="Status" )

        self.Books_list.column("#0", width=50)
        self.Books_list.column("#1", width=100)
        self.Books_list.column("#2", width=100)
        self.Books_list.column("#3", width=100)
        self.Books_list.column("#4", width=100)
        self.Books_list.column("#5", width=150)
        self.Books_list.column("#6", width=100)
        self.Books_list.column("#7", width=150)
        self.Books_list.column("#8", width=150)
        self.Books_list.column("#9", width=100)

        self.Books_list.place(relx=0.01, rely=0.01, relwidth=0.97, relheight=0.98)

        self.scroolList = Scrollbar(self.frame_MyBooksTable, orient='vertical')
        self.Books_list.configure(yscroll=self.scroolList.set)

        self.xscroolList = Scrollbar(self.frame_MyBooksTable, orient='horizontal')
        # self.Books_list.configure(yscroll=self.xscroolList.set)

        self.scroolList.place(relx=0.98, rely=0.01, relwidth=0.01, relheight=0.98)

        # self.xscroolList.place(relx=0.01, rely=0.99, relwidth=0.99, relheight=0.1)        
    
    def generate_my_books_window(self):
        self.mybookswindow.resizable(False, False)
        self.mybookswindow.mainloop()